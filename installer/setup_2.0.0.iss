; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Files Drag & Drop"
#define MyAppVersion "2.0.0"
#define MyAppPublisher "Files Drag & Drop"
#define MyAppURL "http://www.filesdnd.fr/"
#define MyAppExeName "Files Drag and Drop.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{783820E2-A6FB-4737-84C3-A58C57F5AEBD}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf}\{#MyAppName}
DefaultGroupName={#MyAppName}
AllowNoIcons=yes
OutputDir=./
OutputBaseFilename=filesdnd-2.0.0-setup
SetupIconFile=./icons/fdnd_icon.ico
Compression=lzma2/max
SolidCompression=yes
LanguageDetectionMethod=locale

[Languages]
Name: "en"; MessagesFile: "compiler:Default.isl"
Name: "fr"; MessagesFile: "compiler:Languages\French.isl"

[CustomMessages]
; Français
fr.moreopt=Options supplémentaires :
fr.needBonjour1=Files Drag & Drop a besoin d'un composant complémentaire.   
fr.needBonjour2=Voulez-vous installer Bonjour ?
fr.needBonjour3=Bonjour est un logiciel développé par Apple qui permet la détection de périphériques via un réseau wifi.


;English
en.moreopt=Additional options:
en.needBonjour1=Files Drag & Drop require a component in order to work.
en.needBonjour2=Do you want to install Bonjour?
en.needBonjour3=Bonjour is a software made by Apple and allows network device's detection.

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: {cm:moreopt}; Flags: unchecked;
Name: "quicklaunchicon"; Description: "{cm:CreateQuickLaunchIcon}"; GroupDescription: {cm:moreopt}; Flags: unchecked; OnlyBelowVersion: 0,6.1
; Name: "startup"; Description: "Lancer Files Drag && Drop au démarrage de Windows"; GroupDescription: "Options supplémentaires : "; Flags: unchecked;

[Files]
Source: "./files/{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "./files/depfiles/*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "./msi/BonjourX86.msi"; DestDir: "{tmp}"; Flags: ignoreversion deleteafterinstall
Source: "./msi/BonjourX64.msi"; DestDir: "{tmp}"; Flags: ignoreversion deleteafterinstall
Source: "./redists/vcredist_x86_2013.exe"; DestDir: {tmp}; Flags: deleteafterinstall
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"
; Name: "{userstartup}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: startup
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon
Name: "{userappdata}\Microsoft\Internet Explorer\Quick Launch\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: quicklaunchicon

[Run]
Filename: "{tmp}\vcredist_x86_2013.exe"; Check: VCRedistNeedsInstall
Filename: "msiexec.exe"; Parameters: "/i ""{tmp}\BonjourX86.msi"""; Check: CheckBonjourX86
Filename: "msiexec.exe"; Parameters: "/i ""{tmp}\BonjourX64.msi"""; Check: CheckBonjourX64
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[code]
// Constants
#IFDEF UNICODE
  #DEFINE AW "W"
#ELSE
  #DEFINE AW "A"
#ENDIF
type
  INSTALLSTATE = Longint;
const
  INSTALLSTATE_INVALIDARG = -2;  // An invalid parameter was passed to the function.
  INSTALLSTATE_UNKNOWN = -1;     // The product is neither advertised or installed.
  INSTALLSTATE_ADVERTISED = 1;   // The product is advertised but not installed.
  INSTALLSTATE_ABSENT = 2;       // The product is installed for a different user.
  INSTALLSTATE_DEFAULT = 5;      // The product is installed for the current user.

  VC_2005_REDIST_X86 = '{A49F249F-0C91-497F-86DF-B2585E8E76B7}';
  VC_2005_REDIST_X64 = '{6E8E85E8-CE4B-4FF5-91F7-04999C9FAE6A}';
  VC_2005_REDIST_IA64 = '{03ED71EA-F531-4927-AABD-1C31BCE8E187}';
  VC_2005_SP1_REDIST_X86 = '{7299052B-02A4-4627-81F2-1818DA5D550D}';
  VC_2005_SP1_REDIST_X64 = '{071C9B48-7C32-4621-A0AC-3F809523288F}';
  VC_2005_SP1_REDIST_IA64 = '{0F8FB34E-675E-42ED-850B-29D98C2ECE08}';
  VC_2005_SP1_ATL_SEC_UPD_REDIST_X86 = '{837B34E3-7C30-493C-8F6A-2B0F04E2912C}';
  VC_2005_SP1_ATL_SEC_UPD_REDIST_X64 = '{6CE5BAE9-D3CA-4B99-891A-1DC6C118A5FC}';
  VC_2005_SP1_ATL_SEC_UPD_REDIST_IA64 = '{85025851-A784-46D8-950D-05CB3CA43A13}';
 
  VC_2008_REDIST_X86 = '{FF66E9F6-83E7-3A3E-AF14-8DE9A809A6A4}';
  VC_2008_REDIST_X64 = '{350AA351-21FA-3270-8B7A-835434E766AD}';
  VC_2008_REDIST_IA64 = '{2B547B43-DB50-3139-9EBE-37D419E0F5FA}';
  VC_2008_SP1_REDIST_X86 = '{9A25302D-30C0-39D9-BD6F-21E6EC160475}';
  VC_2008_SP1_REDIST_X64 = '{8220EEFE-38CD-377E-8595-13398D740ACE}';
  VC_2008_SP1_REDIST_IA64 = '{5827ECE1-AEB0-328E-B813-6FC68622C1F9}';
  VC_2008_SP1_ATL_SEC_UPD_REDIST_X86 = '{1F1C2DFC-2D24-3E06-BCB8-725134ADF989}';
  VC_2008_SP1_ATL_SEC_UPD_REDIST_X64 = '{4B6C7001-C7D6-3710-913E-5BC23FCE91E6}';
  VC_2008_SP1_ATL_SEC_UPD_REDIST_IA64 = '{977AD349-C2A8-39DD-9273-285C08987C7B}';
  VC_2008_SP1_MFC_SEC_UPD_REDIST_X86 = '{9BE518E6-ECC6-35A9-88E4-87755C07200F}';
  VC_2008_SP1_MFC_SEC_UPD_REDIST_X64 = '{5FCE6D76-F5DC-37AB-B2B8-22AB8CEDB1D4}';
  VC_2008_SP1_MFC_SEC_UPD_REDIST_IA64 = '{515643D1-4E9E-342F-A75A-D1F16448DC04}';
 
  VC_2010_REDIST_X86 = '{196BB40D-1578-3D01-B289-BEFC77A11A1E}';
  VC_2010_REDIST_X64 = '{DA5E371C-6333-3D8A-93A4-6FD5B20BCC6E}';
  VC_2010_REDIST_IA64 = '{C1A35166-4301-38E9-BA67-02823AD72A1B}';
  VC_2010_SP1_REDIST_X86 = '{F0C3E5D1-1ADE-321E-8167-68EF0DE699A5}';
  VC_2010_SP1_REDIST_X64 = '{1D8E6291-B0D5-35EC-8441-6616F567A0F7}';
  VC_2010_SP1_REDIST_IA64 = '{88C73C1C-2DE5-3B01-AFB8-B46EF4AB41CD}';
 
  VC_2013_REDIST_X86 = '{CE085A78-074E-4823-8DC1-8A721B94B76D}'; // 12.0.21005
  VC_2013_REDIST_X86_V2 = '{13A4EE12-23EA-3371-91EE-EFB36DDFFF3E}';
  VC_2013_REDIST_X64 = '{7F51BDB9-EE21-49EE-94D6-90AFC321780E}';

// Check vcredist 
// http://stackoverflow.com/questions/11137424/how-to-make-vcredist-x86-reinstall-only-if-not-yet-installed
// http://blogs.msdn.com/b/astebner/archive/2010/05/05/10008146.aspx
function MsiQueryProductState(szProduct: string): INSTALLSTATE; 
  external 'MsiQueryProductState{#AW}@msi.dll stdcall';

function VCVersionInstalled(const ProductID: string): Boolean;
begin
  Result := MsiQueryProductState(ProductID) = INSTALLSTATE_DEFAULT;
end;

function VCRedistNeedsInstall: Boolean;
begin
  Result := not (VCVersionInstalled(VC_2013_REDIST_X86) or 
                 VCVersionInstalled(VC_2013_REDIST_X86_V2) or 
                 VCVersionInstalled(VC_2013_REDIST_X64));
end;

// Check Bonjour
function BonjourNeedsInstall(): Boolean;
begin;
 //not (FileExists('C:\Program Files (x86)\Bonjour\mDNSResponder.exe') or FileExists('C:\Program Files\Bonjour\mDNSResponder.exe'));
  Result := TRUE;
end;

function CheckBonjourX64(): Boolean;
begin
  Result := False; 
  if BonjourNeedsInstall() and (ProcessorArchitecture = paX64) then
  begin;
    if MsgBox(ExpandConstant('{cm:needBonjour1}') + #13#10 + ExpandConstant('{cm:needBonjour2}') + #13#10#13#10 + ExpandConstant('{cm:needBonjour3}'), mbConfirmation, MB_YESNO) = idYes Then
      Result := True;
  end;
end;

function CheckBonjourX86(): Boolean;
begin
  Result := False;
  if BonjourNeedsInstall() and (ProcessorArchitecture = paX86) then
  begin;
    if MsgBox(ExpandConstant('{cm:needBonjour1}') + #13#10 + ExpandConstant('{cm:needBonjour2}') + #13#10#13#10 + ExpandConstant('{cm:needBonjour3}'), mbConfirmation, MB_YESNO) = idYes Then
      Result := True;
  end;
end;

